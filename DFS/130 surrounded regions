class Solution {
    public void solve(char[][] board) {
        int n=board.length;
        if(n==0){
            return;
        }
        int m=board[0].length;
        for(int i=0;i<n;i++){
            bfs(board,i,0);
            bfs(board,i,m-1);
        }
        for(int j=0;j<m;j++){
            bfs(board,0,j);
            bfs(board,n-1,j);
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]=='O'){
                    board[i][j]='X';
                }
                if(board[i][j]=='W'){
                    board[i][j]='O';
                }
                
            }
        }
    }
    
    public void bfs(char[][] board,int x,int y){
        int n=board.length;
        int m=board[0].length;
        if(x<0||x>=n||y<0||y>=m){
            return;
        }
        if(board[x][y]=='O'){
            board[x][y]='W';
            bfs(board,x-1,y);
            bfs(board,x+1,y);
            bfs(board,x,y+1);
            bfs(board,x,y-1);
        }
    }
    
}
