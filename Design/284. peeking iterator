// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html
import java.util.NoSuchElementException;
class PeekingIterator implements Iterator<Integer> {

    Iterator<Integer> iter;
    boolean flag;
    Integer next;
    
	public PeekingIterator(Iterator<Integer> iterator) {
	    // initialize any member here.
	    iter=iterator;
        getnext();
	}

    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
        return next;
	}

	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
	    if(flag)
        {
            //throw new NoSuchElementException();
            throw new NoSuchElementException();
        }

            Integer res=next;
            getnext();
            return res;
	}

	@Override
	public boolean hasNext() {
	    return !flag;
	}
    
    public void getnext()
    {
        if(iter.hasNext())
        {
            next=iter.next();
        }
        else
        {
              flag=true;  
        }
    }
}


