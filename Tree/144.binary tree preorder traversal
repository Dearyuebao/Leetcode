/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
// class Solution {
//     //recursive solution
//     public List<Integer> preorderTraversal(TreeNode root) {
//         List<Integer> res=new ArrayList<>();
//         if(root==null)
//         {
//             return res;
//         }
//         helper(root,res);
//         return res;
//     }
    
//     public void helper(TreeNode root,List<Integer> res)
//     {
//         if(root==null)
//         {
//             return;
//         }
//         res.add(root.val);
//         helper(root.left,res);
//         helper(root.right,res);
//     }
// }

class Solution {
    //iterative
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> res=new ArrayList<>();
        Stack<TreeNode> stack=new Stack<>();
        stack.push(root);
        while(!stack.isEmpty())
        {
            TreeNode node=stack.pop();
            if(node!=null)//take care
            {
                res.add(node.val);
                stack.push(node.right);//the node.right and node.left may be null
                stack.push(node.left);
            }
        }
        return res;
    }
}
