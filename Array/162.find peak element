class Solution {
    public int findPeakElement(int[] nums) {
        //if the former number of nums[0] and the latter number of nums[nums.length-1] 
        //are smaller than their neighbour, and nums[i]!=nums[i+1], a peak must exist
        int len=nums.length;
        int left=1,right=len-2;
        if(len==1)
        {
            return 0;
        }
        if(len==2){
            if(nums[0]>nums[1]) return 0;
            else if(nums[0]<nums[1]) return 1;
        }
        if(nums[0]>nums[1]) return 0;
        if(nums[len-1]>nums[len-2]) return len-1;
        while(left<right)
        {
            int mid=left+(right-left+1)/2;
            if(nums[mid]>nums[mid-1]&&nums[mid]>nums[mid+1])
            {
                return mid;
            }
            else if(nums[mid-1]>=nums[mid+1])//take care >=
            {
                right=mid-1;
            }
            else if(nums[mid+1]>nums[mid-1])
            {
                left=mid+1;
            }
            if(left==right) return left;
        }
        return left;
    }
}
