class Solution{
  public List<String> letterCombinations(String digits){
    List<String> res=new ArrayList<String>();
    Map<Character,char[]> map=new HashMap<>();
    map.put('2',new char[]{'a','b','c'});
    map.put('3',new char[]{'d','e','f'});
    map.put('4',new char[]{'g','h','i'});
    map.put('5',new char[]{'j','k','l'});
    map.put('6',new char[]{'m','n','o'});
    map.put('7',new char[]{'p','q','r','s'});
    map.put('8',new char[]{'t','u','v'});
    map.put('9',new char[]{'w','x','y','z'});
    
    StringBuilder sb=new StringBuilder();
    helper(map,digits,sb,res);
    return res;
  }
  
  public void helper(Map<Character,char[]> map,String digits,StringBuilder sb,ArrayList<String> res){
    if(sb.length()==digits.length()){
      res.add(sbs.toString());
      return;
    }
    
    for(char c:map.get(digits.charAt(sb.length()))){
      sb.append(c);
      helper(map,digits,sb,res);
      sb.deleteCharAt(sb.length()-1);
    }
  }
}
