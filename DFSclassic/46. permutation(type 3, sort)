class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        dfs(nums, res, 0);
        return res;
    }
    public void dfs(int[] nums, List<List<Integer>> res, int i) {
        if(i == nums.length) {
            List<Integer> cur = new ArrayList<>();
            for(int n: nums) {
                cur.add(n);
            }
            res.add(cur);
            return;
        } else {
            for(int j = i; j < nums.length; j++) {
                swap(nums, i, j);
                dfs(nums, res, i + 1);
                swap(nums, i, j);
            }
        }
    }
    
    public void swap(int[] nums, int i, int j) {
        int tmp = nums[i];
        nums[i] = nums[j];
        nums[j] = tmp;
    }
}
