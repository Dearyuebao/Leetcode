class Solution {
    public int maximumProduct(int[] nums) {
        //my easy solution beats 52%
        // Arrays.sort(nums);
        // int pro1=nums[nums.length-1]*nums[nums.length-2]*nums[nums.length-3];
        // int pro2=nums[0]*nums[1]*nums[nums.length-1];
        // return Math.max(pro1,pro2);
        
        //100%solution, similar to my solution
        int max1=Integer.MIN_VALUE,max2=Integer.MIN_VALUE,max3=Integer.MIN_VALUE;
        int min1=Integer.MAX_VALUE,min2=Integer.MAX_VALUE;
        for(int n:nums)
        {
            if(n>max1)
            {
                max3=max2;
                max2=max1;
                max1=n;
            }
            else if(n>max2)
            {
                max3=max2;
                max2=n;
            }
            else if(n>max3)
            {
                max3=n;
            }
            
            if(n<min1)
            {
                min2=min1;
                min1=n;
            }
            else if(n<min2)
            {
                min2=n;
            }
        }
        return Math.max(max1*max2*max3,min1*min2*max1);
    }
}
