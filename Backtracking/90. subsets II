class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        if(nums==null){
            return res;
        }
        
        if(nums.length==0){
            res.add(new ArrayList<Integer>());
            return res;
        }
        
        Arrays.sort(nums);
        List<Integer> subset=new ArrayList<Integer>();
        helper(nums,0,subset,res);
        
        return res;
    }
    
    public void helper(int[] nums,int startIndex,List<Integer> subset, List<List<Integer>> res){
        res.add(new ArrayList<Integer>(subset));
        //helper里面嵌套循环
        for(int i=startIndex;i<nums.length;i++){
            if(i!=startIndex&&nums[i]==nums[i-1]){
                continue;
            }
            subset.add(nums[i]);
            helper(nums,i+1,subset,res);
            subset.remove(subset.size()-1);
        }
    }
}
