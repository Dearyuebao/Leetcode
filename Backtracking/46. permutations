class Solution {
    public List<List<Integer>> permute(int[] nums) {
      List<List<Integer>> res=new ArrayList<>();
      if(nums==null){
        return res;
      }
      helper(nums,new boolean[nums.length],new ArrayList<Integer>(),res);
      
      return res;
    }
    
    public void helper(int[] nums,boolean[] visited,List<Integer> permutation,List<List<Integer>> res){
      if(nums.length==permutation.size()){
        res.add(new ArrayList<Integer>(permutation));
      }
      
      for(int i=0;i<nums.length;i++){
        if(visited[i]){
          continue;
        }
        permutation.add(nums[i]);
        visited[i]=true;
        helper(nums,visited,permutation,res);
        visited[i]=false;
        permutation.remove(permutation.size()-1);
      }
    }
}
