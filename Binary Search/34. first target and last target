class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] res=new int[2];
        if(nums == null || nums.length == 0) {
            res[0] = -1;
            res[1] = -1;
            return res;
        }

        int left = 0, right = nums.length-1;
        while(left < right - 1) {
            int mid = left + (right - left)/2;
            if(nums[mid] == target) {
                right = mid;
            }
            else if(nums[mid] < target) {
                left = mid + 1;
            }
            else {
                right = mid - 1;
            }
        }
        if(nums[left] == target) {
            res[0] = left;
        }
        else if(nums[right] == target) {
            res[0] = right;
        }
        else {
            res[0] = -1;
            res[1] = -1;
            return res;
        }
        
        int l = 0, r = nums.length-1;
        while(l < r - 1) {
            int mid = l + (r - l)/2;
            if(nums[mid] == target) {
                l = mid;
            }
            else if(nums[mid] < target) {
                l = mid + 1;
            }
            else {
                r = mid - 1;
            }
        }
        if(nums[r] == target) {
            res[1] = r;
        }
        else if(nums[l] == target) {
            res[1] = l;
        }
        else {
            res[1] = -1;
        }
        return res;
    }
}
