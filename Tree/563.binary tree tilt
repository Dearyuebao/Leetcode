/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    //traversal solution beats 49%, define a global variable
//     int result=0;
//     public int findTilt(TreeNode root) {
//         helper(root);
//         return result;
//     }
//     public int helper(TreeNode root)
//     {
//         if(root==null)
//         {
//             return 0;
//         }
        
//         int left=helper(root.left);
//         int right=helper(root.right);
        
//         result+=Math.abs(left-right);
        
//         return left+right+root.val;
//     }
    
    public int findTilt(TreeNode root) {
        int[] ret=new int[1];
        ret[0]=0;
        helper(root,ret);
        return ret[0];
    }
    public int helper(TreeNode root,int[] ret)
    {
        if(root==null)
        {
            return 0;
        }
        int left=helper(root.left,ret);
        int right=helper(root.right,ret);
        ret[0]+=Math.abs(left-right);
        return left+right+root.val;
    }
}
